[{"/Users/shazeenfabius/Documents/Programming/Lambda-School/LambdaProjects/Web38Unit2/Sprint4BuildWeek/frontend/african-marketplace/src/index.js":"1","/Users/shazeenfabius/Documents/Programming/Lambda-School/LambdaProjects/Web38Unit2/Sprint4BuildWeek/frontend/african-marketplace/src/App.js":"2","/Users/shazeenfabius/Documents/Programming/Lambda-School/LambdaProjects/Web38Unit2/Sprint4BuildWeek/frontend/african-marketplace/src/components/Sign-in.js":"3","/Users/shazeenfabius/Documents/Programming/Lambda-School/LambdaProjects/Web38Unit2/Sprint4BuildWeek/frontend/african-marketplace/src/components/homePage.js":"4"},{"size":259,"mtime":1609798440484,"results":"5","hashOfConfig":"6"},{"size":439,"mtime":1609799713256,"results":"7","hashOfConfig":"6"},{"size":4234,"mtime":1609798279422,"results":"8","hashOfConfig":"6"},{"size":243,"mtime":1609799724339,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1bakh5p",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/shazeenfabius/Documents/Programming/Lambda-School/LambdaProjects/Web38Unit2/Sprint4BuildWeek/frontend/african-marketplace/src/index.js",[],["20","21"],"/Users/shazeenfabius/Documents/Programming/Lambda-School/LambdaProjects/Web38Unit2/Sprint4BuildWeek/frontend/african-marketplace/src/App.js",[],"/Users/shazeenfabius/Documents/Programming/Lambda-School/LambdaProjects/Web38Unit2/Sprint4BuildWeek/frontend/african-marketplace/src/components/Sign-in.js",["22","23","24"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\n// import { connect } from \"react-redux\";\n// import { loginUser } from \"../store/actions\";\n// import { LocateBtn, LoginBodyStyle, LoginBtn } from \"../styles/LightModeStyles\";\n\nfunction SignIn(props) {\n  // const { loginUser, error } = props;\n  // const { push } = useHistory();\n  //manage state for the form inputs\n  const [formState, setFormSate] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  //managing error state\n  const [errors, setErrors] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  //submit state checks whether the form can be submited\n  const [buttonDisabled, setButtonDisabled] = useState(true);\n\n  //inline validation on one key/value pair at a time\n  const validateChange = (event) => {\n    //.reach is in the yup library\n    //returns a promise\n    yup\n      .reach(formSchema, event.target.name)\n      .validate(event.target.value)\n      .then((valid) => {\n        //value from valid comes from .validate\n        //if the input is passing formSchema\n        setErrors({ ...errors, [event.target.name]: \"\" });\n      })\n      .catch((error) => {\n        //if the input is breakign formSchema\n        //capture the error message\n        setErrors({ ...errors, [event.target.name]: error.errors[0] });\n      });\n\n    //need to call this function the onChange function = inputChnage\n  };\n\n  //onChange function\n  const inputChange = (event) => {\n    //allows us to pass around synthertic events\n    event.persist();\n\n    const newFormState = {\n      ...formState,\n      [event.target.name]: event.target.value,\n    };\n\n    //event is being passed in to the validateChange function i created\n    validateChange(event);\n\n    setFormSate(newFormState);\n  };\n\n  //form schema set of rules\n  //object is coming from yup library\n  //shape function takes in an object {}\n  const formSchema = yup.object().shape({\n    username: yup.string().required(\"Username is required\"),\n    password: yup.string().required(\"Password is required\"),\n    // accountType: yup.string().oneOf([\"diner\", \"operator\"]),\n  });\n\n  useEffect(() => {\n    //isValid comes from the yup library\n    //checking formSchema against formState\n    //comparing the keys and the values\n    //returns a promise\n    formSchema.isValid(formState).then((valid) => {\n      //we can check the process has been completed\n      setButtonDisabled(!valid);\n    });\n  }, [formState]);\n  //do something every time formState changes\n\n  //onSubmit function\n  const formSubmit = (event) => {\n    event.preventDefault();\n    // loginUser(\n    //   {\n    //     username: formState.username.trim(),\n    //     password: formState.password,\n    //   },\n    //   push\n    // );\n  };\n\n  return (\n    <div>\n      <p className=\"loginTitle\">Log In</p>\n      {/* <p>{error}</p> */}\n      <form onSubmit={formSubmit}>\n        <div className=\"loginForm\">\n          <label htmlFor=\"username\">\n            Username\n            <input\n              id=\"username\"\n              type=\"text\"\n              name=\"username\"\n              value={formState.username}\n              placeholder=\"USERNAME\"\n              onChange={inputChange}\n            />\n            {errors.username.length > 0 ? <p>{errors.username}</p> : null}\n          </label>\n        </div>\n        <div className=\"loginForm\">\n          <label htmlFor=\"password\">\n            Password\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"password\"\n              value={formState.password}\n              placeholder=\"PASSWORD\"\n              onChange={inputChange}\n            />\n            {errors.password.length > 0 ? <p>{errors.password}</p> : null}\n          </label>\n        </div>\n        <button type=\"submit\" disabled={buttonDisabled}>\n          Log In\n        </button>\n        <p>\n          <Link className=\"\" to=\"/signup\">\n            Not a member?\n          </Link>\n        </p>\n        <p>\n          <Link className=\"\" to=\"/\">\n            Home Page\n          </Link>\n        </p>\n      </form>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    error: state.error,\n  };\n};\nexport default SignIn;\n","/Users/shazeenfabius/Documents/Programming/Lambda-School/LambdaProjects/Web38Unit2/Sprint4BuildWeek/frontend/african-marketplace/src/components/homePage.js",["25","26"],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":2,"column":16,"nodeType":"33","messageId":"34","endLine":2,"endColumn":26},{"ruleId":"35","severity":1,"message":"36","line":80,"column":6,"nodeType":"37","endLine":80,"endColumn":17,"suggestions":"38"},{"ruleId":"31","severity":1,"message":"39","line":145,"column":7,"nodeType":"33","messageId":"34","endLine":145,"endColumn":22},{"ruleId":"31","severity":1,"message":"40","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":14},{"ruleId":"31","severity":1,"message":"32","line":2,"column":16,"nodeType":"33","messageId":"34","endLine":2,"endColumn":26},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formSchema'. Either include it or remove the dependency array.","ArrayExpression",["43"],"'mapStateToProps' is assigned a value but never used.","'SignIn' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"44","fix":"45"},"Update the dependencies array to be: [formSchema, formState]",{"range":"46","text":"47"},[2484,2495],"[formSchema, formState]"]